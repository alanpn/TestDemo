
1.配置
    // androidX 1.1.0
    implementation 'com.google.android:flexbox:1.0.0'

2。flexDirection
    决定了主轴的方向，即FlexboxLayout里子Item的排列方向，有以下四种取值：

    row (default)： 默认值，主轴为水平方向，起点在左端，从左到右。
    row_reverse：主轴为水平方向，起点在右端，从右到左。
    column：主轴为竖直方向，起点在上端，从上到下。
    column_reverse：主轴为竖直方向，起点在下端，从下往上。

3。flexWrap
    决定Flex 容器是单行还是多行，并且决定副轴（与主轴垂直的轴）的方向。可能有以下3个值：

    noWrap: 不换行，一行显示完子元素。
    wrap: 按正常方向换行。
    wrap_reverse: 按反方向换行。

4。justifyContent
    控制元素主轴方向上的对齐方式，有以下5种取值：

    flex_start (default): 默认值，左对齐
    flex_end: 右对齐
    center: 居中对齐
    space_between: 两端对齐，中间间隔相同
    space_around: 每个元素到两侧的距离相等。

5。alignItems
    控制元素在副轴方向的对齐方式，有以下5种取值：

    stretch (default) ：默认值，如果item没有设置高度，则充满容器高度。
    flex_start：顶端对齐
    flex_end：底部对齐
    center：居中对齐
    baseline：第一行内容的的基线对齐。

6。alignContent
    控制多根轴线的对齐方式(也就是控制多行，如果子元素只有一行，则不起作用)，可能有一下6种取值：

    stretch (default): 默认值，充满交叉轴的高度（测试发现，需要alignItems 的值也为stretch 才有效）。
    flex_start: 与交叉轴起点对齐。
    flex_end: 与交叉轴终点对齐。
    center: 与交叉轴居中对齐。
    space_between: 交叉轴两端对齐，中间间隔相等。
    space_around: 到交叉轴两端的距离相等。
    showDividerHorizontal
    showDividerHorizontal 控制显示水平方向的分割线，值为none | beginning | middle | end其中的一个或者多个。

7。dividerDrawableHorizontal
    设置Flex 轴线之间水平方向的分割线。

8。showDividerVertical
    控制显示垂直方向的分割线，值为none | beginning | middle | end其中的一个或者多个。

9。dividerDrawableVertical
    设置子元素垂直方向的分割线。

10。showDivider
    控制显示水平和垂直方向的分割线，值为none | beginning | middle | end其中的一个或者多个。

11。dividerDrawable
    设置水平和垂直方向的分割线，但是注意,如果同时和其他属性使用，比如为 Flex 轴、子元素设置了justifyContent="space_around" 、
    alignContent="space_between" 等等。可能会看到意料不到的空间，因此应该避免和这些值同时使用。

